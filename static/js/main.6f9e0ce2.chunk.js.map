{"version":3,"sources":["assets/logoPurple.png","stylesheets/modules/Landing.module.css","stylesheets/modules/Welcome.module.css","stylesheets/modules/landingStyle.js","components/Landing/Landing.js","components/Landing/LandingContainer.js","components/Welcome/Welcome.js","components/Welcome/WelcomeContainer.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","inputGroupStyle","textAlign","width","landing","props","className","styles","landingStyle","onMouseOver","mouseArea","src","logo","alt","logoStyle","InputGroup","style","Input","type","placeholder","InputGroupAddon","addonType","Button","color","Link","to","LandingContainer","handleMouseEnter","e","handleMouseOver","setState","x","nativeEvent","offsetX","y","offsetY","handleMouseLeave","state","users","id","phoneNumber","nickname","customStyle","bind","Landing","this","Component","Welcome","WelcomePage","Row","Col","user","name","LogoNav","event","datetime","WelcomeContainer","rsvp","App","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6f9e0ce2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoPurple.e6e10cdf.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"landingStyle\":\"Landing_landingStyle__1rNQi\",\"mouseArea\":\"Landing_mouseArea__1_0sK\",\"backgroundColor\":\"Landing_backgroundColor__2Ywh-\",\"logoStyle\":\"Landing_logoStyle__2rWt3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WelcomePage\":\"Welcome_WelcomePage__34XpL\",\"LogoNav\":\"Welcome_LogoNav__2rN-G\"};","import { richBlack } from './variablesStyle'\r\n\r\nconst landingStyle = {\r\n  backgroundColor: \"rgba(0,0,0,0.9)\",\r\n  minHeight: \"100vh\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  fontSize: \"calc(10px + 2vmin)\",  \r\n  color: \"rgba(255,255,255,1)\"\r\n}\r\n\r\nconst inputGroupStyle = {\r\n  textAlign: 'center',\r\n  width: '20%'\r\n}\r\n\r\nexport {\r\n  landingStyle,\r\n  inputGroupStyle\r\n}","import React from 'react'\r\nimport { inputGroupStyle} from '../../stylesheets/modules/landingStyle'\r\nimport logo from '../../assets/logoPurple.png'\r\nimport { InputGroup, Input, InputGroupAddon, Button } from 'reactstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport styles from '../../stylesheets/modules/Landing.module.css'\r\n\r\nconst landing = (props) => {\r\n  return (\r\n    <div className={styles.landingStyle}>\r\n      <div onMouseOver={props.onMouseOver} className={styles.mouseArea}>\r\n        <header>\r\n          <img src={logo} alt=\"Hangout229\" className={styles.logoStyle} />\r\n        </header>\r\n        <InputGroup style={inputGroupStyle}>\r\n          <Input type=\"text\" placeholder=\"Your Phone Number Goes Here!\" />\r\n          <InputGroupAddon addonType=\"append\">\r\n            <Button color=\"danger\">\r\n              <Link to=\"/welcome\">Login</Link>\r\n            </Button>\r\n          </InputGroupAddon>\r\n        </InputGroup>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default landing","import React, { Component } from 'react'\r\nimport Landing from './Landing'\r\n\r\nclass LandingContainer extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      users: [\r\n        {\r\n          id: \"asdasd1\",\r\n          phoneNumber: \"5055895577\",\r\n          nickname: \"edka\"\r\n        },\r\n        {\r\n          id: \"qwdqwd1\",\r\n          phoneNumber: \"50523234123\",\r\n          nickname: \"aycarl\"\r\n        }\r\n      ],\r\n      x: 0,\r\n      y: 0,\r\n      customStyle: {}\r\n    }\r\n\r\n    this.handleMouseOver = this.handleMouseOver.bind(this)\r\n  }\r\n\r\n  handleMouseEnter = e => {\r\n  }\r\n\r\n  handleMouseOver = e => {\r\n    this.setState({\r\n      x: e.nativeEvent.offsetX,\r\n      y: e.nativeEvent.offsetY,\r\n    })\r\n  }\r\n\r\n  handleMouseLeave= e => {\r\n  }\r\n\r\n  handleMouseLeave = e => {\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Landing onMouseOver={this.handleMouseOver} x={this.state.x} y={this.state.y} customStyle={this.state.customStyle} />\r\n    )\r\n  }\r\n}\r\n\r\nexport default LandingContainer","import React from 'react'\r\nimport styles from '../../stylesheets/modules/Welcome.module.css'\r\nimport { Row, Col, Button } from 'reactstrap'\r\n\r\nconst Welcome = (props) => {\r\n  return (\r\n    <div className={styles.WelcomePage}>\r\n      <Row>\r\n        <Col>\r\n          <h3>Welcome, {props.user.name}!</h3>\r\n        </Col>\r\n        <Col>\r\n          <img src={props.logo} alt=\"images\" className={styles.LogoNav} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <h1>{props.event.name}</h1>\r\n          <p>{props.event.datetime}</p>\r\n          <h3>Are you coming?</h3>\r\n          <Button>Yes</Button>\r\n          <Button>No</Button>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Welcome ","import React, { Component } from 'react'\r\nimport logo from '../../assets/logoPurple.png'\r\nimport Welcome from './Welcome'\r\nimport {landingStyle, logoStyle, inputGroupStyle} from '../../stylesheets/modules/landingStyle'\r\n\r\nclass WelcomeContainer extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      event: { name: 'Game Night', datetime: \"SAT - 3/9/19 - 4PM\" },\r\n      user: { name: 'Carl', rsvp: false }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Welcome user={this.state.user} event={this.state.event} logo={logo} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WelcomeContainer","import React, { Component } from 'react';\r\nimport LandingContainer from '../components/Landing/LandingContainer'\r\nimport WelcomeContainer from '../components/Welcome/WelcomeContainer'\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport '../stylesheets/App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={LandingContainer} />\r\n            <Route exact path=\"/welcome\" component={WelcomeContainer} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n\r\n"],"sourceRoot":""}